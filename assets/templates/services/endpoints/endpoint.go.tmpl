{{- /*gotype: gs/parser.Service*/ -}}
// Code generated by gs. DO NOT EDIT
package endpoint
import (
    service "{{ .Import }}"

    goKitEndpoint "github.com/go-kit/kit/endpoint"
)
type Endpoints interface {
{{ range .Endpoints }} 	{{ .Name }}() goKitEndpoint.Endpoint
{{ end }}}

type endpoints struct {
{{ range .Endpoints }}	{{ lowerFirst .Name }}  goKitEndpoint.Endpoint
{{ end }}}

func MakeEndpoints(svc service.{{.Interface}}, endpointsOptions ...Option) Endpoints {
    epOptions := &options{}
	for _, option := range endpointsOptions {
		option(epOptions)
	}
	return &endpoints{
		{{ range .Endpoints }}		{{lowerFirst .Name }}:	make{{ .Name }}Endpoint(svc, epOptions.middleware, epOptions.{{lowerFirst .Name }}Options...),
	{{ end }}}
}

{{ range .Endpoints }}	func (svcEndpoints endpoints) {{ .Name }}() goKitEndpoint.Endpoint{
	return svcEndpoints.{{ lowerFirst .Name  }}
}
{{ end }}