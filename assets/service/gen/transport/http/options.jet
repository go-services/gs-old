// Code generated by gs. DO NOT EDIT
package http

import (
	"context"

	goKitHttp "github.com/go-kit/kit/transport/http"

	goHttp "net/http"

	"github.com/gorilla/mux"
)

type EncoderFunc func(context.Context, goHttp.ResponseWriter, interface{}) error
type DecoderFunc func(*goHttp.Request, interface{}) error

type options struct {
	address string
	router  *mux.Router
	notFoundHandler goHttp.HandlerFunc

	// Global Options
	serverOptions []goKitHttp.ServerOption
	errorEncoder  goKitHttp.ErrorEncoder
	jsonEncoder   EncoderFunc
	jsonDecoder   DecoderFunc
	xmlEncoder    EncoderFunc
	xmlDecoder    DecoderFunc
	formDecoder   DecoderFunc

	// Endpoint Options
	{{ range .Endpoints }}{{if .HttpTransport}} {{ lowerFirst( .Name ) }}Options    []{{ .Name }}Option
    {{ end }}{{end}}
}

type Option func(*options)

func Router(router *mux.Router) Option {
	return func(o *options) {
		o.router = router
	}
}

func Address(address string) Option {
	return func(o *options) {
		o.address = address
	}
}

func ErrorEncoder(errorEncoder goKitHttp.ErrorEncoder) Option {
	return func(o *options) {
		o.errorEncoder = errorEncoder
	}
}

func JsonEncoder(jsonEncoder EncoderFunc) Option {
	return func(o *options) {
		o.jsonEncoder = jsonEncoder
	}
}

func JsonDecoder(jsonDecoder DecoderFunc) Option {
	return func(o *options) {
		o.jsonDecoder = jsonDecoder
	}
}

func XmlEncoder(xmlEncoder EncoderFunc) Option {
	return func(o *options) {
		o.xmlEncoder = xmlEncoder
	}
}

func XmlDecoder(xmlDecoder DecoderFunc) Option {
	return func(o *options) {
		o.xmlDecoder = xmlDecoder
	}
}

func FormDecoder(formDecoder DecoderFunc) Option {
	return func(o *options) {
		o.formDecoder = formDecoder
	}
}

func ServerOptions(opts ...goKitHttp.ServerOption) Option {
	return func(o *options) {
		o.serverOptions = append(o.serverOptions, opts...)
	}
}

func NotFoundHandler(notFoundHandler goHttp.HandlerFunc) Option {
	return func(o *options) {
		o.notFoundHandler = notFoundHandler
	}
}

{{ range .Endpoints }}{{if .HttpTransport}}
func {{ .Name }}Options(opts ...{{ .Name }}Option) Option {
	return func(o *options) {
		o.{{ lowerFirst( .Name ) }}Options = append(o.{{ lowerFirst( .Name ) }}Options, opts...)
	}
}

// {{ .Name }} options
func {{ .Name }}ServerOptions(opts ...goKitHttp.ServerOption) {{ .Name }}Option {
	return func(o *{{ lowerFirst( .Name ) }}) {
		o.serverOptions = append(o.serverOptions, opts...)
	}
}

func {{ .Name }}Encoder(encoder {{ .Name }}EncodeResponseFunc) {{ .Name }}Option {
	return func(o *{{ lowerFirst( .Name ) }}) {
		o.encoder = encoder
	}
}

func {{ .Name }}Decoder(decoder {{ .Name }}DecodeRequestFunc) {{ .Name }}Option {
	return func(o *{{ lowerFirst( .Name ) }}) {
		o.decoder = decoder
	}
}

func {{ .Name }}MethodRoutes(routes ...MethodRoute) {{ .Name }}Option {
	return func(o *{{ lowerFirst( .Name ) }}) {
		o.methodRoutes = append(o.methodRoutes, routes...)
	}
}

func {{ .Name }}ErrorEncoder(errorEncoder goKitHttp.ErrorEncoder) {{ .Name }}Option {
	return func(o *{{ lowerFirst( .Name ) }}) {
		o.errorEncoder = errorEncoder
	}
}
{{ end }}{{ end }}