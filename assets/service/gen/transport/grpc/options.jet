// Code generated by gs. DO NOT EDIT
// Code generated by gs. DO NOT EDIT
package grpc

import goKitGRPC "github.com/go-kit/kit/transport/grpc"

type options struct {
	address string

	// Global Options
	serverOptions []goKitGRPC.ServerOption
	errorEncoder  func(err error) string

	// Endpoint Options
    {{ range .GRPCTransport.GRPCEndpoint}}
	{{ lowerFirst(.Name) }}Options    []{{.Name}}Option
	{{ end }}
}

type Option func(*options)

func Address(address string) Option {
	return func(o *options) {
		o.address = address
	}
}

func ErrorEncoder(errorEncoder func(error) string) Option {
	return func(o *options) {
		o.errorEncoder = errorEncoder
	}
}

func ServerOptions(opts ...goKitGRPC.ServerOption) Option {
	return func(o *options) {
		o.serverOptions = append(o.serverOptions, opts...)
	}
}
{{ range .GRPCTransport.GRPCEndpoint }}
func {{.Name}}Options(opts ...{{.Name}}Option) Option {
	return func(o *options) {
		o.{{ lowerFirst(.Name) }}Options = append(o.{{ lowerFirst(.Name) }}Options, opts...)
	}
}

// {{.Name}} options
func {{.Name}}ServerOptions(opts ...goKitGRPC.ServerOption) {{.Name}}Option {
	return func(o *{{ lowerFirst(.Name) }}) {
		o.serverOptions = append(o.serverOptions, opts...)
	}
}

func {{.Name}}Encoder(encoder {{.Name}}EncodeResponseFunc) {{.Name}}Option {
	return func(o *{{ lowerFirst(.Name) }}) {
		o.encoder = encoder
	}
}

func {{.Name}}Decoder(decoder {{.Name}}DecodeRequestFunc) {{.Name}}Option {
	return func(o *{{ lowerFirst(.Name) }}) {
		o.decoder = decoder
	}
}

func {{.Name}}ErrorEncoder(errorEncoder func(error) string) {{.Name}}Option {
	return func(o *{{ lowerFirst(.Name) }}) {
		o.errorEncoder = errorEncoder
	}
}
{{ end }}